import { default as React } from 'react';
export interface IWuComboboxProps<T> {
    data: T[];
    accessorKey: {
        value: string;
        label: string;
    };
    defaultValue?: T | T[] | null;
    value?: T | T[] | null;
    Header?: React.ReactNode;
    virtualizedThreshold?: number;
    isEllipse?: boolean;
    placeholder?: string;
    variant?: 'flat' | 'outlined';
    dir?: 'ltr' | 'rtl';
    label?: string;
    maxHeight?: number;
    onSelect?: (value: T | T[]) => void;
    hasGroup?: boolean;
    multiple?: boolean;
    selectAll?: {
        enable: boolean;
        label?: string;
        includeDisabled?: boolean;
        triggerText?: string;
    };
    id?: string;
    disabled?: boolean;
    labelPosition?: 'left' | 'top' | 'right';
}
export declare const WuCombobox: <T>({ data, accessorKey, value, defaultValue, Header, virtualizedThreshold, isEllipse, placeholder, variant, dir, onSelect, label, maxHeight, multiple, hasGroup, selectAll, id, disabled, labelPosition, }: IWuComboboxProps<T>) => React.JSX.Element;
