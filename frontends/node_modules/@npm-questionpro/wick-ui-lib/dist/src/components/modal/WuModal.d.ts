import { Dialog, DialogClose } from '../../base/ui/dialog';
import { default as React, FC, ReactNode } from 'react';
declare const MAX_WIDTH: {
    readonly sm: "400px";
    readonly md: "600px";
    readonly lg: "1200px";
};
declare const BUTTON_VARIANTS: {
    readonly primary: "bg-blue-p text-white hover:bg-opacity-70";
    readonly secondary: "hover:bg-blue-p hover:bg-gray-100 text-blue-p";
    readonly iconOnly: "p-2 hover:bg-gray-40 min-w-[auto] disabled:grayscale disabled:opacity-80 focus-visible:ring-offset-0 focus:bg-blue-soft";
};
type IModalSize = keyof typeof MAX_WIDTH;
type IButtonVariant = keyof typeof BUTTON_VARIANTS;
export interface IWuModalProps extends React.ComponentProps<typeof Dialog> {
    Trigger?: ReactNode;
    children?: ReactNode;
    size?: IModalSize;
    hideCloseButton?: boolean;
    preventClickOutside?: boolean;
    onOpenChange?: (open: boolean) => void;
    open?: boolean;
    dir?: 'ltr' | 'rtl';
    maxWidth?: string;
    maxHeight?: string;
}
export declare const WuModal: FC<IWuModalProps>;
export declare const WuModalContent: FC<React.HTMLAttributes<HTMLDivElement>>;
export declare const WuModalHeader: FC<React.HTMLAttributes<HTMLDivElement>>;
export declare const WuModalFooter: FC<React.HTMLAttributes<HTMLDivElement>>;
interface IModalCloseProps extends React.ComponentProps<typeof DialogClose> {
    children?: ReactNode;
    variant?: IButtonVariant;
}
export declare const WuModalClose: FC<IModalCloseProps>;
export {};
